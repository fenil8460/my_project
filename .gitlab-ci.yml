before_script:
 - echo "$ENV_CONTENT" >> .env

stages:
 - prod_deployment

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
  ENV_CONTENT: $prodenv
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

prod_deployment:
 image: alpine:3.14
 stage: prod_deployment
 tags:
  - prod_deployment
 script:
  - chmod og= $ID_RSA
  - apk update && apk add openssh-client
  - apk add apache2
  - apk add apache2-proxy
  - apk add apache2-ssl 
  - rm -rf /var/cache/apk/*
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "sudo rm VIDUR-4-0-Back-End -r || true"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "git clone https://gitlab-ci-token:$GITLAB_PERSONAL_ACCESS_TOKEN@gitlab.com/$GITLAB_USERNAME/VIDUR-4-0-Back-End.git"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd VIDUR-4-0-Back-End && touch .env && echo -e $ENV_CONTENT >> .env"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd VIDUR-4-0-Back-End && docker-compose down || true"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd VIDUR-4-0-Back-End && docker-compose up -d --build"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "sudo rm VIDUR-4-0-Back-End -r"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker image prune -f"
 environment:
  name: production
  url: http://192.168.7.237:8000
